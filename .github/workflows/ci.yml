# GitHub Actions workflow: CI for Yare (https://github.com/foresterre/yare)

# Originally based on `bstr` crate ci, which can be found at:
# https://github.com/BurntSushi/bstr/blob/master/.github/workflows/ci.yml
# `bstr` is licensed under Apache License, Version 2.0 or MIT license

name: "github_actions_ci"
on:
  pull_request:
  push:
    branches:
      - master
      - main
env:
  CI: 1
jobs:
  test:
    name: tests
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        build: [msrv, stable, macos, win-gnu, win-msvc]
        include:
          - build: msrv
            os: ubuntu-latest
            rust: 1.42.0

          - build: stable
            os: ubuntu-latest
            rust: stable

          - build: macos
            os: macOS-latest
            rust: stable

          - build: win-gnu
            os: windows-latest
            rust: stable-x86_64-gnu

          - build: win-msvc
            os: windows-latest
            rust: stable

    steps:
      - name: checkout_repo
        uses: actions/checkout@v2

      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal

      - name: build_workspace_crates
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --all

      - name: test_workspace_crates
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all

  rustfmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt
      - name: check_formatting
        run: |
          cargo fmt --all -- --check

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repo
        uses: actions/checkout@v2

      - name: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - name: check_with_clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace

  cargo_deny:
    name: pipeline_cargo_deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1

